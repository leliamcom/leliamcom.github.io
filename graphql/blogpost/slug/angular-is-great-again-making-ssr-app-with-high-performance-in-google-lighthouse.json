{"author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam","tagline":"Make people great again!"},"data":"While exploring the option on making a blog with content management system, I give a try on making use of koa2 + Postgres + Angular and the result turns out quite good.\n\nUsing google lighthouse to test it, resulted in 91/100 performance, 100/100 progressive web app, 100/100 accessibility, 100/100 best practices, 100/100 SEO, with the main bundle size in 775.7KB.\n\n## Hosting the blog\nThe amazing part of using angular universal is that it has ability to compile all the page to static html. Making SSR and hosting on github available (or any CDN).\n\n## Tech Stack\n- Backend using koa2 + graphql: nodejs is useful that we can use same language with frontend and graphql let us have high confidence in calling the api from frontend\n- Database with Postgres: Quite enough for starting, unless it aim to become as big as medium.com then cassandra will be better\n- Frontend with Angular Universal: Unlike react, Angular is a framework that give opinion on what you should use, therefore all developers can share the same understanding and less debate.\n\n## My Blog in Local Environment\n![leliam.com in localhost](/assets/2018071803.png)\nJust to show that it actually is not just a normal static webpage, but instead is being compiled to static webpage from a normal app!\n\n## Initial app before optimizing \n![initial app before optimizing](/assets/2018071801.png)\n- Initially the app will be big which has 2.47MB for our main bundle.js, therefore you will go through several step of optimization\n\n1. use lazy loading that seperate our route to different chunk\n2. use tree shaking to reduce size of some package (such as highlight.js)\n3. reducing package size such as moment that use a lot of locale\n\n## After optimizing main bundle\n![after optimizing main bundle](/assets/2018071802.png)\n- You can see that the bundle size reduced a lot!!\n\n## Further enhance for lighthouse performance\nEven with the reduce of main bundle size, the lighthouse performance is still quite bad, to increase the lighthouse performance, we will have to:\n1. preload some non critical css\n2. solve the flickering issue by using transfer state\n3. make plugins such as facebook comment to only load when needed\n4. reduce useless html rendering such as my login button which is not needed when hosting on github\n5. finally make the bundle.js to defer loading so that it won't interrupt the initial DOM rendering.\n\n## Conclusion\nIs quite happy with the Angular Universal, I am looking forward to the release of Angular version 7.0 that will possibly reduce the core.js size.\n\nThe server-side rendering and progressive web app is becoming more important since we will not only support mobile, but potentially AR and VR device, angular is finally a great option in building a high quality PWA!","description":"While exploring the option on making a blog with content management system, I give a try on making use of koa2 + Postgres + Angular and the result turns out quite good.\n\nUsing google lighthouse to test it, resulted in 91/100 performance, 100/100 progressive web app, 100/100 accessibility, 100/100 best practices, 100/100 SEO, with the main bundle size in 775.7KB.","id":"c44c13ae-107a-4de7-9e02-b646db67d400","bannerUrl":"/assets/2018071800.png","coverUrl":"/assets/thumb-150-2018071800.png","postedAt":"2018-07-18T14:00:00.000Z","tags":["angular","nodejs"],"title":"Angular is great again - making SSR app with high performance in google lighthouse","typeCode":1}
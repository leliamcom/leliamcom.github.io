{"slug":"golang-rest-api-@3oYTmlWx3QBUng4ZzKdm5N","title":"Golang Rest API","description":"<p>We will use gvm to install go for the current user. Note that we need to use go1.4 to compile go1.5 because go1.5 use go itself as compiler, therefore it need to have go installed.</p>\n<p>Note that gvm is mainly for development use, IMHO using tar install or docker is a better way for production server.</p>\n","banner":"/assets/2016022000.png","author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam"},"data":"<h2>Installation on Golang</h2>\n<p>We will use gvm to install go for the current user. Note that we need to use go1.4 to compile go1.5 because go1.5 use go itself as compiler, therefore it need to have go installed.</p>\n<p>Note that gvm is mainly for development use, IMHO using tar install or docker is a better way for production server.</p>\n<pre class=\"hljs\"><code>bash &lt; &lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)\ngvm install go1.4\ngvm use go1.4\ngvm install go1.6\ngvm use go1.6 --default\n</code></pre>\n<h2>Gin-Gonic/Gin</h2>\n<p>Gin is a web framework written in Go (Golang). It features a martini-like API with much better performance, up to 40 times faster thanks to httprouter. If you need performance and good productivity, you will love Gin.</p>\n<pre class=\"hljs\"><code>go get github.com/gin-gonic/gin\n</code></pre>\n<pre class=\"hljs\"><code>#~/golang/server.<span class=\"hljs-keyword\">go</span>\n<span class=\"hljs-keyword\">package</span> main\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"github.com/gin-gonic/gin\"</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> {\n    r := gin.Default()\n    r.GET(<span class=\"hljs-string\">\"/ping\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span><span class=\"hljs-params\">(c *gin.Context)</span></span> {\n        c.JSON(<span class=\"hljs-number\">200</span>, gin.H{\n            <span class=\"hljs-string\">\"message\"</span>: <span class=\"hljs-string\">\"pong\"</span>,\n        })\n    })\n    r.Run() <span class=\"hljs-comment\">// listen and server on 0.0.0.0:8080</span>\n}\n</code></pre>\n<p>and execute it with <code>go run server.go</code>, access localhost:8080/ping and you should be able to see <code>{&quot;message&quot;:&quot;pong&quot;}</code></p>\n<h2>Live Reloading with codegangsta/gin</h2>\n<p>However for development, it is important to have compile on files changed function. There is a package there for go. Note that do not start any app on proxy port that is used by gin (default 3000) and the application port.</p>\n<p>Running below code will autostart the go app.</p>\n<pre class=\"hljs\"><code>go get github.com/codegangsta/gin\n<span class=\"hljs-built_in\">cd</span> ~/golang/\ngin -i -a 8080\n</code></pre>\n<p>now change the code without terminating gin</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">#~/golang/server.go</span>\npackage main\n\nimport <span class=\"hljs-string\">\"github.com/gin-gonic/gin\"</span>\n\nfunc <span class=\"hljs-function\"><span class=\"hljs-title\">main</span></span>() {\n    r := gin.Default()\n    r.GET(<span class=\"hljs-string\">\"/ping\"</span>, func(c *gin.Context) {\n        c.JSON(200, gin.H{\n            <span class=\"hljs-string\">\"message\"</span>: <span class=\"hljs-string\">\"pong pong\"</span>,\n        })\n    })\n    r.Run() // listen and server on 0.0.0.0:8080\n}\n</code></pre>\n<p>access to localhost:8080/ping and you should be able to see <code>{&quot;message&quot;:&quot;pong pong&quot;}</code></p>\n<h2>This is It</h2>\n<p>With this, we have successfully setup a simple golang rest api server. Golang is a promising solution to give both near C performance + dynamic language development speed + goroutine.</p>\n","postedAt":"20 Feb, 2016","metaDescription":"We will use gvm to install go for the current user. Note that we need to use go1.4 to compile go1.5 because go1.5 use go itself as compiler, therefore it need to have go installed.\nNote that gvm is mainly for development use, IMHO using tar install or docker is a better way for production server.\n"}
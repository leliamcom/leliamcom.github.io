{"slug":"tensorFlow-udacity-1-notmnist-part-1-@3DnITWQyuDFfIk4lJqNCoZ","title":"TensorFlow Udacity 1_notmnist - Part 1","description":"<p>Basically 1_notmnist is to learn how to display data in Jupyter Notebook. Besides, it also let us know on sklearn - a python machine library - so that we can then compare with TensorFlow. This is the exact <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/udacity/1_notmnist.ipynb\">ipynb file at Tensorflow Github Repo</a>.</p>\n","banner":"/assets/2016031900.png","author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam"},"data":"<h2>Summary of 1_notmnist</h2>\n<p>Basically 1_notmnist is to learn how to display data in Jupyter Notebook. Besides, it also let us know on sklearn - a python machine library - so that we can then compare with TensorFlow. This is the exact <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/udacity/1_notmnist.ipynb\">ipynb file at Tensorflow Github Repo</a>.</p>\n<h2>Notice</h2>\n<p>This is as a form of sharing and discuss on better way to solve 1_notmnist problem. Do not copy and paste directly as it does not help on improving yourself + the answer is not optimized.</p>\n<p>The entire series of TensorFlow Udacity can be found at <a href=\"https://www.leliam.com/tag/tensorflow-udacity\">tensorflow-udacity tag</a></p>\n<h2>Preparation</h2>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\"># start a docker container</span>\ndocker run -p 8888:8888 -it b.gcr.io/tensorflow-udacity/assignments:latest\n</code></pre>\n<blockquote>\n<h2>Problem 1</h2>\n<p>Let's take a peek at some of the data to make sure it looks sensible. Each exemplar should be an image of a character A through J rendered in a different &gt;font. Display a sample of the images that we just downloaded. Hint: you can use the package IPython.display.</p>\n</blockquote>\n<h2>Solving Problem 1</h2>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">import</span> os, random\ndir_name = <span class=\"hljs-string\">\"notMNIST_large\"</span>\nfolder_names = [<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"C\"</span>, <span class=\"hljs-string\">\"D\"</span>, <span class=\"hljs-string\">\"E\"</span>, <span class=\"hljs-string\">\"F\"</span>, <span class=\"hljs-string\">\"G\"</span>, <span class=\"hljs-string\">\"H\"</span>, <span class=\"hljs-string\">\"I\"</span>, <span class=\"hljs-string\">\"J\"</span>]\n<span class=\"hljs-keyword\">for</span> folder <span class=\"hljs-keyword\">in</span> folder_names:\n  im_name = random.choice(os.listdir(dir_name + <span class=\"hljs-string\">\"/\"</span> + folder))\n  im_file = dir_name + <span class=\"hljs-string\">\"/\"</span> + folder + <span class=\"hljs-string\">\"/\"</span> + im_name\n  display(Image(filename=im_file))\n</code></pre>\n<p><img src=\"/assets/2016031901.png\" alt=\"png\" loading=\"lazy\"></p>\n<h2>Comment</h2>\n<p>Before I get to Problem 1 I have spent a lot of time download the notMNIST_large due to low RAM I have given to my VM that run the docker container.</p>\n<p>For the problem part, it teaches us on using <code>display(Image(filename=im_file))</code> which is a very useful function of showing image file on Jupyter Notebook.</p>\n","postedAt":"19 Mar, 2016","metaDescription":"Basically 1_notmnist is to learn how to display data in Jupyter Notebook. Besides, it also let us know on sklearn - a python machine library - so that we can then compare with TensorFlow. This is the exact ipynb file at Tensorflow Github Repo.\n"}
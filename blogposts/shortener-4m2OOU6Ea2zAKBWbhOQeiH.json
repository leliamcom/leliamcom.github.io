{"slug":"postgresql-9.5.0-vs-mariadb-10.1.11-vs-mysql-5.7.0-year-2016-@4m2OOU6Ea2zAKBWbhOQeiH","title":"PostgreSQL [9.5.0] vs MariaDB [10.1.11] vs MySQL [5.7.0] year 2016","description":"<p>On Dec 2015 I have done a similar <a href=\"https://www.leliam.com/postgresql-vs-mariadb-mysql-2015\">benchmark on postgres vs mariadb vs mysql</a>, however I had done some serious mistake on the benchmark and caused the result to be biased towards MySQL.</p>\n<p>Therefore I had enhanced the benchmark. The benchmark script and how to setup is at <a href=\"https://github.com/nghenglim/database_benchmark\">this Github Repo</a>.</p>\n","banner":"/assets/2015121900.jpg","author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam"},"data":"<p><img src=\"/assets/2016021200.png\" alt=\"Postgres vs Maria vs Mysql\" title=\"Postgres vs Maria vs Mysql\" loading=\"lazy\">\n<img src=\"/assets/2016021201.png\" alt=\"Postgres vs Maria vs Mysql ln\" title=\"Postgres vs Maria vs Mysql ln\" loading=\"lazy\"></p>\n<h2>Reason to Benchmark</h2>\n<p>On Dec 2015 I have done a similar <a href=\"https://www.leliam.com/postgresql-vs-mariadb-mysql-2015\">benchmark on postgres vs mariadb vs mysql</a>, however I had done some serious mistake on the benchmark and caused the result to be biased towards MySQL.</p>\n<p>Therefore I had enhanced the benchmark. The benchmark script and how to setup is at <a href=\"https://github.com/nghenglim/database_benchmark\">this Github Repo</a>.</p>\n<h2>Notice &amp; FAQ</h2>\n<ul>\n<li>Why using default database configuration / configuration between databases is difference:\n<ul>\n<li>This benchmark is using default configuration that comes with the docker image.</li>\n<li>Time consuming to standardize databases configuration</li>\n<li>Default configuration should give a basic idea on how the database performs.</li>\n</ul>\n</li>\n<li>Why missing benchmark on index, included data transfer time for benchmark, etc:\n<ul>\n<li>Is in the To Do list, however IMHO these are good to have benchmark.</li>\n<li>Preferably others can help to enhance the <a href=\"https://github.com/nghenglim/database_benchmark\">script</a>.</li>\n</ul>\n</li>\n<li>Why run in VM which make this benchmark not so reliable:\n<ul>\n<li>Do not want to spend money to buy a physical server or cloud instances.</li>\n<li>Make benchmark decentralized, everyone who had a laptop should be able to do their own benchmark instead of relying on others.</li>\n<li>A rough idea on how these databases perform is very important knowledge for all the developer.</li>\n</ul>\n</li>\n</ul>\n<h2>Benchmark Environment (Vagrant)</h2>\n<ul>\n<li>Ubuntu wily werewolf (15.10)</li>\n<li>1 core CPU, 100% execution cap</li>\n<li>1024 MB memory</li>\n</ul>\n<h2>Benchmark Environment (Docker)</h2>\n<ul>\n<li>mariadb:10.1.11</li>\n<li>mysql:5.7.10</li>\n<li>postgres:9.5.0</li>\n</ul>\n<h2>Benchmark Details</h2>\n<p>Full detail is at <a href=\"https://github.com/nghenglim/database_benchmark/tree/master/Mariadb10.1.11-MySQL5.7.10-Postgres9.5.0\">this Github Repo Folder</a></p>\n<p>Total Rows: 1 million</p>\n<p>Queries:</p>\n<ol>\n<li><code>SELECT * FROM testing LIMIT 1000</code></li>\n<li><code>SELECT * FROM testing WHERE int_col &gt; 5000 LIMIT 1000</code></li>\n<li><code>SELECT * FROM testing WHERE int_col + int_col2 &gt; 12345</code></li>\n<li><code>SELECT COUNT(*) FROM testing WHERE int_col + int_col2 &gt; 12345</code></li>\n<li><code>SELECT * FROM testing WHERE int_col &gt; 5000 ORDER BY word_col ASC LIMIT 1000</code></li>\n<li><code>SELECT * FROM testing WHERE word_col LIKE '%lim%' ORDER BY word_col DESC LIMIT 1000</code></li>\n</ol>\n<p>MariaDB Summary:</p>\n<pre class=\"hljs\"><code>average write time: 50.02ms/10000rows\naverage query time (q1): 3.87ms\naverage query time (q2): 4.36ms\naverage query time (q3): 5.18ms\naverage query time (q4): 261.69ms\naverage query time (q5): 741.55ms\naverage query time (q6): 639.75ms\n</code></pre>\n<p>MySQL Summary:</p>\n<pre class=\"hljs\"><code>average write time: 50.86ms/10000rows\naverage query time (q1): 3.42ms\naverage query time (q2): 3.91ms\naverage query time (q3): 5.33ms\naverage query time (q4): 246.77ms\naverage query time (q5): 6686.11ms\naverage query time (q6): 508.9ms\n</code></pre>\n<p>PostgreSQL Summary:</p>\n<pre class=\"hljs\"><code>average write time: 79.2ms/10000rows\naverage query time (q1): 3.27ms\naverage query time (q2): 3.62ms\naverage query time (q3): 4.0ms\naverage query time (q4): 169.18ms\naverage query time (q5): 229.33ms\naverage query time (q6): 207.01ms\n</code></pre>\n<h2>Conclusion</h2>\n<ul>\n<li>MariabDB &amp; MySQL has slight advantages at database writing</li>\n<li>PostgreSQL has slight advantages at simple database read query</li>\n<li>PostgreSQL has big advantages at complex database read query</li>\n</ul>\n<p>As a result, I think that choosing PostgreSQL is a better options for RDBMS - provided that PostgreSQL comes with more features and following standard SQL.</p>\n","postedAt":"12 Feb, 2016","metaDescription":"On Dec 2015 I have done a similar benchmark on postgres vs mariadb vs mysql, however I had done some serious mistake on the benchmark and caused the result to be biased towards MySQL.\nTherefore I had enhanced the benchmark. The benchmark script and how to setup is at this Github Repo.\n"}
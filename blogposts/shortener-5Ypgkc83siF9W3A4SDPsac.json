{"slug":"angular-is-great-again-making-ssr-app-with-high-performance-in-google-lighthouse-@5Ypgkc83siF9W3A4SDPsac","title":"Angular is great again - making SSR app with high performance in google lighthouse","description":"<p>While exploring the option on making a blog with content management system, I give a try on making use of koa2 + Postgres + Angular and the result turns out quite good.</p>\n<p>Using google lighthouse to test it, resulted in 91/100 performance, 100/100 progressive web app, 100/100 accessibility, 100/100 best practices, 100/100 SEO, with the main bundle size in 775.7KB.</p>\n","banner":"/assets/2018071800.png","author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam"},"data":"<p>While exploring the option on making a blog with content management system, I give a try on making use of koa2 + Postgres + Angular and the result turns out quite good.</p>\n<p>Using google lighthouse to test it, resulted in 91/100 performance, 100/100 progressive web app, 100/100 accessibility, 100/100 best practices, 100/100 SEO, with the main bundle size in 775.7KB.</p>\n<h2>Hosting the blog</h2>\n<p>The amazing part of using angular universal is that it has ability to compile all the page to static html. Making SSR and hosting on github available (or any CDN).</p>\n<h2>Tech Stack</h2>\n<ul>\n<li>Backend using koa2 + graphql: nodejs is useful that we can use same language with frontend and graphql let us have high confidence in calling the api from frontend</li>\n<li>Database with Postgres: Quite enough for starting, unless it aim to become as big as medium.com then cassandra will be better</li>\n<li>Frontend with Angular Universal: Unlike react, Angular is a framework that give opinion on what you should use, therefore all developers can share the same understanding and less debate.</li>\n</ul>\n<h2>My Blog in Local Environment</h2>\n<p><img src=\"/assets/2018071803.png\" alt=\"leliam.com in localhost\" loading=\"lazy\">\nJust to show that it actually is not just a normal static webpage, but instead is being compiled to static webpage from a normal app!</p>\n<h2>Initial app before optimizing</h2>\n<p><img src=\"/assets/2018071801.png\" alt=\"initial app before optimizing\" loading=\"lazy\"></p>\n<ul>\n<li>Initially the app will be big which has 2.47MB for our main bundle.js, therefore you will go through several step of optimization</li>\n</ul>\n<ol>\n<li>use lazy loading that seperate our route to different chunk</li>\n<li>use tree shaking to reduce size of some package (such as highlight.js)</li>\n<li>reducing package size such as moment that use a lot of locale</li>\n</ol>\n<h2>After optimizing main bundle</h2>\n<p><img src=\"/assets/2018071802.png\" alt=\"after optimizing main bundle\" loading=\"lazy\"></p>\n<ul>\n<li>You can see that the bundle size reduced a lot!!</li>\n</ul>\n<h2>Further enhance for lighthouse performance</h2>\n<p>Even with the reduce of main bundle size, the lighthouse performance is still quite bad, to increase the lighthouse performance, we will have to:</p>\n<ol>\n<li>preload some non critical css</li>\n<li>solve the flickering issue by using transfer state</li>\n<li>make plugins such as facebook comment to only load when needed</li>\n<li>reduce useless html rendering such as my login button which is not needed when hosting on github</li>\n<li>finally make the bundle.js to defer loading so that it won't interrupt the initial DOM rendering.</li>\n</ol>\n<h2>Conclusion</h2>\n<p>Is quite happy with the Angular Universal, I am looking forward to the release of Angular version 7.0 that will possibly reduce the core.js size.</p>\n<p>The server-side rendering and progressive web app is becoming more important since we will not only support mobile, but potentially AR and VR device, angular is finally a great option in building a high quality PWA!</p>\n","postedAt":"18 Jul, 2018","metaDescription":"While exploring the option on making a blog with content management system, I give a try on making use of koa2 + Postgres + Angular and the result turns out quite good.\nUsing google lighthouse to test it, resulted in 91/100 performance, 100/100 progressive web app, 100/100 accessibility, 100/100 best practices, 100/100 SEO, with the main bundle size in 775.7KB.\n"}
{"slug":"react-native-part-3-@77YoBE6g82SUQs0QkEGogP","title":"React Native Part 3","description":"<p>In react native AwesomeProject example, it gets bundle files with 2 options:</p>\n<ol>\n<li>Load from development server</li>\n<li>Load from pre-bundled file on disk</li>\n</ol>\n","banner":"/assets/2015101000.png","author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam"},"data":"<p>In react native AwesomeProject example, it gets bundle files with 2 options:</p>\n<ol>\n<li>Load from development server</li>\n<li>Load from pre-bundled file on disk</li>\n</ol>\n<h2>Hybrid options?</h2>\n<p>The react native default options looks good, but not good enough.</p>\n<p>We would like it to load from development server asynchronously, and load from pre-bundled file on disk when the new bundled file is not ready yet.</p>\n<p>Good news - with some enhance on the AppDelegate.m file that come with the AwesomeProject, it can be archieved!</p>\n<h2>Coding</h2>\n<p><a href=\"https://gist.github.com/nghenglim/46391331d443165d9d53\">View AppDelegate.m at Github</a></p>\n<p>First declare the variable, and set the filepath default store and get from the document directory.</p>\n<pre class=\"hljs\"><code>NSArray   *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\nNSString  *documentsDirectory = [paths objectAtIndex:0];\nNSString  *filePath = [NSString stringWithFormat:@&quot;%@/%@&quot;, documentsDirectory,@&quot;index.ios.bundle&quot;];\n</code></pre>\n<p>Under OPTION 2, asynchronously download file from server. Detect if the file exist in document directory, if the new bundle file exist, load from the document directory. Else, load from the pre-bundled file on the disk:</p>\n<pre class=\"hljs\"><code>dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{\n  NSURL  *url = [NSURL URLWithString:@&quot;http://localhost:8081/index.ios.bundle?platform=ios&amp;dev=true&quot;];\n  NSData *urlData = [NSData dataWithContentsOfURL:url];\n  if ( urlData )\n  {\n    //saving is done on main thread\n    dispatch_async(dispatch_get_main_queue(), ^{\n      [urlData writeToFile:filePath atomically:YES];\n    });\n  }\n});\n\nBOOL fileExists = [[NSFileManager defaultManager] fileExistsAtPath:filePath];\nif (fileExists) {\n  jsCodeLocation = [[NSURL alloc] initFileURLWithPath:filePath];\n} else {\n  jsCodeLocation = [[NSBundle mainBundle] URLForResource:@&quot;main&quot; withExtension:@&quot;jsbundle&quot;];\n}\n</code></pre>\n<h2>Some note</h2>\n<p>This method still have many more enhancement can be done, however its enough to showcase the possibility of react native to asynchronously load file from server, and use the new bundle file when it is ready.</p>\n","postedAt":"17 Oct, 2015","metaDescription":"In react native AwesomeProject example, it gets bundle files with 2 options:\n\nLoad from development server\nLoad from pre-bundled file on disk\n"}
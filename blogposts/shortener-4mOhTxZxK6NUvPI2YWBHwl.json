{"slug":"git-merging-or-combining-multiple-commits-@4mOhTxZxK6NUvPI2YWBHwl","title":"Git Merging or Combining Multiple Commits","description":"<ul>\n<li>many commits inside a feature branch</li>\n<li>small enhancement or defect fix</li>\n<li>not using git stash</li>\n</ul>\n","banner":"/assets/2016010900.png","author":{"avatar":"/assets/32x32_avatar.jpg","name":"Liam"},"data":"<h2>Whats The Problem</h2>\n<ul>\n<li>many commits inside a feature branch\n<ul>\n<li>small enhancement or defect fix</li>\n<li>not using git stash</li>\n</ul>\n</li>\n</ul>\n<h2>The Solution: Git Rebase</h2>\n<p>As in my commit message I use issue number such as <code>#143 fix abc</code>, therefore I set git config comment character to &quot;;&quot;.</p>\n<pre class=\"hljs\"><code>git config core.commentchar <span class=\"hljs-string\">\";\"</span>\ngit <span class=\"hljs-built_in\">log</span> --pretty=oneline\ngit rebase --interactive HEAD~2\n</code></pre>\n<p>in this example, this is what you might see</p>\n<pre class=\"hljs\"><code>pick abc2345 testing\npick def1234 latest commit\n</code></pre>\n<p>edit it to</p>\n<pre class=\"hljs\"><code>pick abc2345 testing\ns def1234 latest commit\n</code></pre>\n<p>save it and execute</p>\n<pre class=\"hljs\"><code>git <span class=\"hljs-built_in\">log</span> --pretty=oneline\n</code></pre>\n<p>and you will find that the latest 2 commit has been merged to one</p>\n<h2>Conclusion</h2>\n<p>This is helpful if you are creating a lot of dummy commit due to minor bug fix or not git stashing.</p>\n","postedAt":"09 Jan, 2016","metaDescription":"\nmany commits inside a feature branch\nsmall enhancement or defect fix\nnot using git stash\n"}